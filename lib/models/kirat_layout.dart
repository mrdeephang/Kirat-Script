class KiratKey {
  final String primaryChar;
  final String? shiftChar;
  final double width;
  final bool isSpecial;

  const KiratKey({
    required this.primaryChar,
    this.shiftChar,
    this.width = 1.0,
    this.isSpecial = false,
  });
}

class KiratKeyboardLayout {
  // Kirat Layout with numbers row
  static const List<List<KiratKey>> kiratLayout = [
    // Row 1 - Numbers
    [
      KiratKey(primaryChar: '·•á'), // 1
      KiratKey(primaryChar: '·•à'), // 2
      KiratKey(primaryChar: '·•â'), // 3
      KiratKey(primaryChar: '·•ä'), // 4
      KiratKey(primaryChar: '·•ã'), // 5
      KiratKey(primaryChar: '·•å'), // 6
      KiratKey(primaryChar: '·•ç'), // 7
      KiratKey(primaryChar: '·•é'), // 8
      KiratKey(primaryChar: '·•è'), // 9
      KiratKey(primaryChar: '·•Ü'), // 0
    ],
    // Row 2 - Kirat consonants
    [
      KiratKey(primaryChar: '·§Å'),
      KiratKey(primaryChar: '·§É'),
      KiratKey(primaryChar: '·§Ö'),
      KiratKey(primaryChar: '·§á'),
      KiratKey(primaryChar: '·§â'),
      KiratKey(primaryChar: '·§ã'),
      KiratKey(primaryChar: '·§ç'),
      KiratKey(primaryChar: '·§è'),
      KiratKey(primaryChar: '·§ë'),
      KiratKey(primaryChar: '·§ì'),
    ],
    // Row 3 - More Kirat characters
    [
      KiratKey(primaryChar: '·§ï'),
      KiratKey(primaryChar: '·§ó'),
      KiratKey(primaryChar: '·§ô'),
      KiratKey(primaryChar: '·§õ'),
      KiratKey(primaryChar: '·§ù'),
      KiratKey(primaryChar: '·§†'),
      KiratKey(primaryChar: '·§¢'),
      KiratKey(primaryChar: '·§£'),
      KiratKey(primaryChar: '·§•'),
      KiratKey(primaryChar: '·§ß'),
    ],
    // Row 4 - Additional Kirat characters
    [
      KiratKey(primaryChar: '·§©'),
      KiratKey(primaryChar: '·§´'),
      KiratKey(primaryChar: '·§≠'),
      KiratKey(primaryChar: '·§Ø'),
      KiratKey(primaryChar: '·§∞'),
      KiratKey(primaryChar: '·§±'),
      KiratKey(primaryChar: '·§≤'),
      KiratKey(primaryChar: '·§≥'),
      KiratKey(primaryChar: '·§¥'),
      KiratKey(primaryChar: '·§µ'),
    ],
    // Row 5 - Controls
    [
      KiratKey(primaryChar: '‚áß', isSpecial: true, width: 1.5),
      KiratKey(primaryChar: '!#1', isSpecial: true, width: 1.5),
      KiratKey(primaryChar: '·§Ä'),
      KiratKey(primaryChar: '·§Ç'),
      KiratKey(primaryChar: '·§Ñ'),
      KiratKey(primaryChar: '·§Ü'),
      KiratKey(primaryChar: '·§à'),
      KiratKey(primaryChar: '‚å´', isSpecial: true, width: 1.5),
    ],
    // Row 6 - Space and enter
    [
      KiratKey(primaryChar: 'üåê', isSpecial: true, width: 1.5),
      KiratKey(primaryChar: ',', width: 1.0),
      KiratKey(primaryChar: '‡••', width: 1.0), // Kirat double danda
      KiratKey(primaryChar: ' ', width: 3.0), // Longer space
      KiratKey(primaryChar: '.', width: 1.0),
      KiratKey(primaryChar: '‚èé', isSpecial: true, width: 1.5),
    ],
  ];

  // Kirat Symbols Layout
  static const List<List<KiratKey>> KiratSymbolsLayout = [
    // Row 1 - Numbers
    [
      KiratKey(primaryChar: '·•á'), // 1
      KiratKey(primaryChar: '·•à'), // 2
      KiratKey(primaryChar: '·•â'), // 3
      KiratKey(primaryChar: '·•ä'), // 4
      KiratKey(primaryChar: '·•ã'), // 5
      KiratKey(primaryChar: '·•å'), // 6
      KiratKey(primaryChar: '·•ç'), // 7
      KiratKey(primaryChar: '·•é'), // 8
      KiratKey(primaryChar: '·•è'), // 9
      KiratKey(primaryChar: '·•Ü'), // 0
    ],
    // Row 2 - Symbols
    [
      KiratKey(primaryChar: '!'),
      KiratKey(primaryChar: '@'),
      KiratKey(primaryChar: '#'),
      KiratKey(primaryChar: '\$'),
      KiratKey(primaryChar: '%'),
      KiratKey(primaryChar: '^'),
      KiratKey(primaryChar: '&'),
      KiratKey(primaryChar: '*'),
      KiratKey(primaryChar: '('),
      KiratKey(primaryChar: ')'),
    ],
    // Row 3 - More symbols
    [
      KiratKey(primaryChar: '-'),
      KiratKey(primaryChar: '_'),
      KiratKey(primaryChar: '='),
      KiratKey(primaryChar: '+'),
      KiratKey(primaryChar: '['),
      KiratKey(primaryChar: ']'),
      KiratKey(primaryChar: '{'),
      KiratKey(primaryChar: '}'),
      KiratKey(primaryChar: '|'),
      KiratKey(primaryChar: '\\'),
    ],
    // Row 4 - Additional symbols
    [
      KiratKey(primaryChar: ';'),
      KiratKey(primaryChar: ':'),
      KiratKey(primaryChar: '"'),
      KiratKey(primaryChar: "'"),
      KiratKey(primaryChar: '<'),
      KiratKey(primaryChar: '>'),
      KiratKey(primaryChar: '?'),
      KiratKey(primaryChar: '/'),
      KiratKey(primaryChar: '~'),
      KiratKey(primaryChar: '`'),
    ],
    // Row 5 - Controls
    [
      KiratKey(primaryChar: '‚áß', isSpecial: true, width: 1.5),
      KiratKey(primaryChar: 'ABC', isSpecial: true, width: 1.5),
      KiratKey(primaryChar: '‚Çπ'),
      KiratKey(primaryChar: '‚Ç¨'),
      KiratKey(primaryChar: '¬£'),
      KiratKey(primaryChar: '¬•'),
      KiratKey(primaryChar: '¬∞'),
      KiratKey(primaryChar: '‚å´', isSpecial: true, width: 1.5),
    ],
    // Row 6 - Space and enter
    [
      KiratKey(primaryChar: 'üåê', isSpecial: true, width: 1.5),
      KiratKey(primaryChar: ',', width: 1.0),
      KiratKey(primaryChar: '‡••', width: 1.0),
      KiratKey(primaryChar: ' ', width: 3.0), // Longer space
      KiratKey(primaryChar: '.', width: 1.0),
      KiratKey(primaryChar: '‚èé', isSpecial: true, width: 1.5),
    ],
  ];

  // English Layout with numbers row
  static const List<List<KiratKey>> englishLayout = [
    // Row 1 - Numbers
    [
      KiratKey(primaryChar: '1'),
      KiratKey(primaryChar: '2'),
      KiratKey(primaryChar: '3'),
      KiratKey(primaryChar: '4'),
      KiratKey(primaryChar: '5'),
      KiratKey(primaryChar: '6'),
      KiratKey(primaryChar: '7'),
      KiratKey(primaryChar: '8'),
      KiratKey(primaryChar: '9'),
      KiratKey(primaryChar: '0'),
    ],
    // Row 2 - First row letters
    [
      KiratKey(primaryChar: 'q'),
      KiratKey(primaryChar: 'w'),
      KiratKey(primaryChar: 'e'),
      KiratKey(primaryChar: 'r'),
      KiratKey(primaryChar: 't'),
      KiratKey(primaryChar: 'y'),
      KiratKey(primaryChar: 'u'),
      KiratKey(primaryChar: 'i'),
      KiratKey(primaryChar: 'o'),
      KiratKey(primaryChar: 'p'),
    ],
    // Row 3 - Second row letters
    [
      KiratKey(primaryChar: 'a'),
      KiratKey(primaryChar: 's'),
      KiratKey(primaryChar: 'd'),
      KiratKey(primaryChar: 'f'),
      KiratKey(primaryChar: 'g'),
      KiratKey(primaryChar: 'h'),
      KiratKey(primaryChar: 'j'),
      KiratKey(primaryChar: 'k'),
      KiratKey(primaryChar: 'l'),
      KiratKey(primaryChar: ';'),
    ],
    // Row 4 - Third row letters
    [
      KiratKey(primaryChar: 'z'),
      KiratKey(primaryChar: 'x'),
      KiratKey(primaryChar: 'c'),
      KiratKey(primaryChar: 'v'),
      KiratKey(primaryChar: 'b'),
      KiratKey(primaryChar: 'n'),
      KiratKey(primaryChar: 'm'),
      KiratKey(primaryChar: ','),
      KiratKey(primaryChar: '.'),
      KiratKey(primaryChar: '/'),
    ],
    // Row 5 - Controls
    [
      KiratKey(primaryChar: '‚áß', isSpecial: true, width: 1.5),
      KiratKey(primaryChar: '!#1', isSpecial: true, width: 1.5),
      KiratKey(primaryChar: '@'),
      KiratKey(primaryChar: '#'),
      KiratKey(primaryChar: '\$'),
      KiratKey(primaryChar: '&'),
      KiratKey(primaryChar: '*'),
      KiratKey(primaryChar: '‚å´', isSpecial: true, width: 1.5),
    ],
    // Row 6 - Space and enter
    [
      KiratKey(primaryChar: 'üåê', isSpecial: true, width: 1.5),
      KiratKey(primaryChar: ',', width: 1.0),
      KiratKey(primaryChar: '!', width: 1.0),
      KiratKey(primaryChar: '?', width: 1.0),
      KiratKey(primaryChar: ' ', width: 3.0), // Longer space
      KiratKey(primaryChar: '.', width: 1.0),
      KiratKey(primaryChar: '‚èé', isSpecial: true, width: 1.5),
    ],
  ];

  // English Symbols Layout
  static const List<List<KiratKey>> englishSymbolsLayout = [
    // Row 1 - Numbers
    [
      KiratKey(primaryChar: '1'),
      KiratKey(primaryChar: '2'),
      KiratKey(primaryChar: '3'),
      KiratKey(primaryChar: '4'),
      KiratKey(primaryChar: '5'),
      KiratKey(primaryChar: '6'),
      KiratKey(primaryChar: '7'),
      KiratKey(primaryChar: '8'),
      KiratKey(primaryChar: '9'),
      KiratKey(primaryChar: '0'),
    ],
    // Row 2 - Symbols
    [
      KiratKey(primaryChar: '!'),
      KiratKey(primaryChar: '@'),
      KiratKey(primaryChar: '#'),
      KiratKey(primaryChar: '\$'),
      KiratKey(primaryChar: '%'),
      KiratKey(primaryChar: '^'),
      KiratKey(primaryChar: '&'),
      KiratKey(primaryChar: '*'),
      KiratKey(primaryChar: '('),
      KiratKey(primaryChar: ')'),
    ],
    // Row 3 - More symbols
    [
      KiratKey(primaryChar: '-'),
      KiratKey(primaryChar: '_'),
      KiratKey(primaryChar: '='),
      KiratKey(primaryChar: '+'),
      KiratKey(primaryChar: '['),
      KiratKey(primaryChar: ']'),
      KiratKey(primaryChar: '{'),
      KiratKey(primaryChar: '}'),
      KiratKey(primaryChar: '|'),
      KiratKey(primaryChar: '\\'),
    ],
    // Row 4 - Additional symbols
    [
      KiratKey(primaryChar: ';'),
      KiratKey(primaryChar: ':'),
      KiratKey(primaryChar: '"'),
      KiratKey(primaryChar: "'"),
      KiratKey(primaryChar: '<'),
      KiratKey(primaryChar: '>'),
      KiratKey(primaryChar: '?'),
      KiratKey(primaryChar: '/'),
      KiratKey(primaryChar: '~'),
      KiratKey(primaryChar: '`'),
    ],
    // Row 5 - Controls
    [
      KiratKey(primaryChar: '‚áß', isSpecial: true, width: 1.5),
      KiratKey(primaryChar: 'ABC', isSpecial: true, width: 1.5),
      KiratKey(primaryChar: '‚Çπ'),
      KiratKey(primaryChar: '‚Ç¨'),
      KiratKey(primaryChar: '¬£'),
      KiratKey(primaryChar: '¬•'),
      KiratKey(primaryChar: '¬∞'),
      KiratKey(primaryChar: '‚å´', isSpecial: true, width: 1.5),
    ],
    // Row 6 - Space and enter
    [
      KiratKey(primaryChar: 'üåê', isSpecial: true, width: 1.5),
      KiratKey(primaryChar: ',', width: 1.0),
      KiratKey(primaryChar: '!', width: 1.0),
      KiratKey(primaryChar: '?', width: 1.0),
      KiratKey(primaryChar: ' ', width: 3.0), // Longer space
      KiratKey(primaryChar: '.', width: 1.0),
      KiratKey(primaryChar: '‚èé', isSpecial: true, width: 1.5),
    ],
  ];
}
